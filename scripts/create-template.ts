/**
 * Script to create a proper PIP template with {pip_body} placeholder
 * Run with: npx tsx scripts/create-template.ts
 */

import { Document, Packer, Paragraph, TextRun, AlignmentType, HeadingLevel } from "docx";
import * as fs from "fs";
import * as path from "path";

async function createTemplate() {
  const doc = new Document({
    sections: [
      {
        properties: {
          page: {
            margin: {
              top: 1440, // 1 inch = 1440 twips
              right: 1440,
              bottom: 1440,
              left: 1440,
            },
          },
        },
        children: [
          // Header with title placeholder
          new Paragraph({
            text: "{title}",
            heading: HeadingLevel.HEADING_1,
            alignment: AlignmentType.CENTER,
            spacing: { after: 240 },
          }),

          // Document metadata
          new Paragraph({
            alignment: AlignmentType.CENTER,
            spacing: { after: 400 },
            children: [
              new TextRun({
                text: "Date: {date}",
                size: 20,
              }),
            ],
          }),

          // Separator line
          new Paragraph({
            text: "─".repeat(80),
            spacing: { after: 200 },
          }),

          // Main content area with placeholder
          new Paragraph({
            text: "{pip_body}",
            spacing: { before: 200 },
          }),

          // Footer separator
          new Paragraph({
            text: "",
            spacing: { before: 400 },
          }),

          new Paragraph({
            text: "─".repeat(80),
          }),

          // Document footer
          new Paragraph({
            alignment: AlignmentType.CENTER,
            spacing: { before: 200 },
            children: [
              new TextRun({
                text: "Generated by PIP Agent | Language: {language}",
                size: 18,
                italics: true,
                color: "666666",
              }),
            ],
          }),
        ],
      },
    ],
  });

  // Generate buffer
  const buffer = await Packer.toBuffer(doc);

  // Save to templates directory
  const templatePath = path.resolve(process.cwd(), "templates/pip-template.docx");
  fs.writeFileSync(templatePath, buffer);

  console.log("✅ Template created successfully!");
  console.log(`📄 Location: ${templatePath}`);
  console.log("\nTemplate includes these placeholders:");
  console.log("  • {title} - Document title");
  console.log("  • {date} - Current date");
  console.log("  • {pip_body} - Main PIP content (REQUIRED)");
  console.log("  • {language} - Output language");
}

createTemplate().catch((error) => {
  console.error("❌ Failed to create template:", error);
  process.exit(1);
});
